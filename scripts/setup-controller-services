#!/bin/bash

set -euo pipefail

readonly dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

pushd "${dir}/../"
trap 'popd' EXIT

for i in {0..2}; do
  cat <<'EOF' | vagrant ssh "controller-${i}" -- sudo bash

mkdir -p /var/lib/kubernetes

cp \
  /vagrant/certificates/ca.pem \
  /vagrant/certificates/ca-key.pem \
  /vagrant/certificates/kubernetes-key.pem \
  /vagrant/certificates/kubernetes.pem \
  /vagrant/config/encryption-config.yaml \
  /vagrant/config/kube-controller-manager.kubeconfig \
  /vagrant/config/kube-scheduler.kubeconfig \
  /var/lib/kubernetes/

cp \
  /vagrant/tools/kube-apiserver \
  /vagrant/tools/kube-controller-manager \
  /vagrant/tools/kube-scheduler \
  /vagrant/tools/kubectl \
  /usr/local/bin/

cp \
  "/vagrant/config/$(hostname)-kube-apiserver.service" \
  /etc/systemd/system/kube-apiserver.service
cp \
  "/vagrant/config/kube-scheduler.service" \
  /etc/systemd/system/kube-scheduler.service
cp \
  "/vagrant/config/kube-controller-manager.service" \
  /etc/systemd/system/kube-controller-manager.service

systemctl daemon-reload
services="kube-apiserver kube-controller-manager kube-scheduler"
systemctl enable ${services}
systemctl start ${services}
systemctl status --no-pager ${services}
EOF

  until vagrant ssh "controller-${i}" -- curl --ipv4 --fail --silent --max-time 3 -k "https://localhost:6443/healthz" &>/dev/null; do
    echo "Waiting for kube-apiserver to become ready in controller-${i}..."
    sleep 3
  done

done
